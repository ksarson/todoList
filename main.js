(()=>{"use strict";const e=[],t=[];function n(e,t,n){const o=document.createElement("div");return o.classList.add("feature-div"),o.innerHTML=`<h2>${e}</h2><br><img class='feature-img' src='${t}'/><br>${n}`,o}function o(n){const o=document.createElement("div");o.classList.add("widget-div");const c=document.createElement("div");if(c.classList.add(`${n}-header`.replace(" ","-").toLowerCase()),c.innerHTML=`<h2>${n}</h2>`,o.appendChild(c),o.appendChild(function(e){const t=document.createElement("div");return t.classList.add(`${e}-list`.replace(" ","-").toLowerCase()),t.setAttribute("id",`${e}-list`.replace(" ","-").toLowerCase()),t}(n)),n.toLowerCase().includes("upcoming"))for(let t=0;t<3;t++)e[t]&&o.appendChild(e[t]);if(n.toLowerCase().includes("closed"))for(let e=0;e<3;e++)t[e]&&o.appendChild(t[e]);return o}const c=function(){const e=document.getElementById("main");e.appendChild(function(){const e=document.createElement("div");e.classList.add("homepage-content","intro-div");const t=document.createElement("div");return t.classList.add("welcome-text"),t.innerHTML="<h2>Welcome to Your To-Do List App!</h2>\n    Embrace productivity with our feature-rich to-do list. Seamlessly create, manage, and prioritize tasks. \n    Effortlessly organize projects and group tasks, fostering efficiency in your daily workflow.\n    Enhance collaboration by sharing projects and tasks with your team. Stay on top of deadlines \n    and timelines with our scheduling feature. Experience the power of productivity at your fingertips. \n    Let's turn your ideas into accomplishments. Start organizing, start achieving!",e.appendChild(t),e.appendChild(function(){const e=document.createElement("div");return e.classList.add("features-div"),e.appendChild(n("Projects","./img/projectsIcon.png","Effortlessly organize and group tasks for efficient project management.")),e.appendChild(n("Tasks","./img/tasksIcon.png","Manage small, individual jobs with flexibility and ease.")),e.appendChild(n("Schedule","./img/scheduleIcon.png","Track timelines and deadlines for projects and tasks with precision.")),e}()),e}()),e.appendChild(function(){const e=document.createElement("div");return e.classList.add("homepage-content","widgets-div"),e.appendChild(o("Upcoming")),e.appendChild(o("Recently Closed")),e}())};function d(e){const t=document.createElement("div");t.classList.add("projects-widget-div");const n=document.createElement("div");return n.classList.add(`${e}-header`.replace(" ","-").toLowerCase()),n.innerHTML=`<h2>${e}</h2>`,t.appendChild(n),t.appendChild(function(e){const t=document.createElement("div");return t.classList.add(`${e}-list`.replace(" ","-").toLowerCase()),t.setAttribute("id",`${e}-list`.replace(" ","-").toLowerCase()),t}(e)),t}function i(e,t,n){const o=document.createElement("button");o.classList.add(n);const c=document.createElement("img");return c.src=e,c.alt=t,c.style.height="24px",c.style.width="24px",o.appendChild(c),o}function s(){const n=this.closest(".project-list-item");if(n){const o=document.getElementById("current-projects-list"),c=document.getElementById("completed-projects-list"),d=n.cloneNode(!0),i=d.querySelector(".move-button img");n.parentNode===o?(i.alt="Uncomplete",i.src="./img/xIcon.svg",t.push(d),e.splice(e.indexOf(d),1),c.appendChild(d)):n.parentNode===c&&(i.alt="Complete",i.src="./img/completeIcon.svg",e.push(d),t.splice(t.indexOf(d),1),o.appendChild(d)),n.remove(),console.log(e),console.log(t),d.querySelector(".move-button").addEventListener("click",s),d.querySelector(".edit-button").addEventListener("click",a),d.querySelector(".delete-button").addEventListener("click",r)}}function a(){const e=this.closest(".project-list-item");if(e){const t=e.querySelector(".project-list-text");if(t){const e=prompt("Enter new text:");null!==e&&(t.textContent=e)}}}function r(){const e=this.closest(".project-list-item");e&&e.remove()}const l=function(){const t=document.getElementById("main");t.appendChild(function(){const e=document.createElement("div");e.classList.add("projects-content","intro-div");const t=document.createElement("div");return t.classList.add("intro-text"),t.innerHTML="<h2>Welcome to the Projects Page!</h2>\nExplore the heart of your productivity journey with our Projects feature. \nSeamlessly create, organize, and track your projects to bring your ideas to life. \nEffortlessly manage tasks, collaborate with your team, and stay focused on your goals. \nWith intuitive project management tools, you're empowered to turn your visions into tangible achievements. \nStart building, start collaborating - welcome to the Projects Page!",e.appendChild(t),e}()),t.appendChild(function(){const e=document.createElement("button");e.classList.add("projects-content","add-new-project-button");const t=document.createElement("div");return t.classList.add("add-new-project-text"),t.innerHTML="<h2>Add a New Project</h2>",e.appendChild(t),e}()),t.appendChild(function(){const e=document.createElement("div");return e.classList.add("projects-content","projects-widgets-div"),e.appendChild(d("Current Projects")),e.appendChild(d("Completed Projects")),e}()),document.querySelector(".add-new-project-button").addEventListener("click",(()=>{!function(){const t=document.getElementById("current-projects-list"),n=document.createElement("div");n.classList.add("project-list-item");const o=document.createElement("div");o.classList.add("project-list-text"),o.textContent="New Project",n.appendChild(o);const c=document.createElement("div");c.classList.add("list-item-actions");const d=i("./img/completeIcon.svg","Move","move-button");d.addEventListener("click",s);const l=i("./img/editIcon.svg","Edit","edit-button");l.addEventListener("click",a);const u=i("./img/trashIcon.png","Delete","delete-button");var p;u.addEventListener("click",r),c.appendChild(d),c.appendChild(l),c.appendChild(u),n.appendChild(c),p=t,e.forEach((e=>{p.appendChild(e)})),e.push(n)}()}))};function u(){const e=document.getElementById("main");for(;e.firstChild;)e.removeChild(e.firstChild)}!function(){const e=document.getElementById("content");e.appendChild(function(){const e=document.createElement("header");e.classList.add("header");const t=document.createElement("img");t.classList.add("header-image"),t.setAttribute("src","./img/listIcon.png"),t.setAttribute("alt","listIcon");const n=document.createElement("div");n.classList.add("header-text"),n.appendChild(t);const o=document.createElement("h1");return o.classList.add("app-name"),o.textContent="List.io",n.appendChild(o),e.appendChild(n),e.appendChild(function(){const e=document.createElement("nav");e.classList.add("nav");const t=document.createElement("button");t.classList.add("nav-button","homepage-button"),t.textContent="Home",e.appendChild(t);const n=document.createElement("button");n.classList.add("nav-button","projects-button"),n.textContent="Projects",e.appendChild(n);const o=document.createElement("button");return o.classList.add("nav-button","tasks-button"),o.textContent="Tasks",e.appendChild(o),e}()),e}()),e.appendChild(function(){const e=document.createElement("main");return e.setAttribute("id","main"),e.classList.add("main"),e}()),e.appendChild(function(){const e=document.createElement("footer");e.classList.add("footer");const t=document.createElement("div");t.classList.add("footer-text"),t.textContent="Copyright Â© 2024 Kolby Sarson",e.appendChild(t);const n=document.createElement("a");n.classList.add("github-icon"),n.href="https://github.com/ksarson/todoList",n.target="_blank";const o=document.createElement("i");return o.classList.add("fab","fa-github"),n.appendChild(o),e.appendChild(t),e.appendChild(n),e}()),l(),document.querySelector(".homepage-button").addEventListener("click",(()=>{u(),c()})),document.querySelector(".projects-button").addEventListener("click",(()=>{u(),l()})),document.querySelector(".tasks-button").addEventListener("click",(()=>{u(),document.getElementById("main").appendChild(function(){const e=document.createElement("div");e.classList.add("task-content","tasj-div");const t=document.createElement("div");return t.classList.add("task-text"),t.innerHTML="Tasks Text",e.appendChild(t),e}())}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,